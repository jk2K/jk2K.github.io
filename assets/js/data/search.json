[ { "title": "深入研究 GitHub Action：解决了什么问题，优势，产品分析？", "url": "/2023/01/dive-into-github-action/", "categories": "技术", "tags": "思考", "date": "2023-01-29 19:50:00 +0800", "snippet": "GitHub Actions 是 GitHub 推出的持续集成和持续交付平台（CI/CD 平台），允许开发者实现自动化的编译、测试、部署，于 2019 年 11 月全面可用，今天就来深入拆解下 GitHub Actions解决了什么问题？CI/CD 平台（流水线引擎）发展历史中大概有 3 波浪潮 第一波浪潮以 Jenkins 为代表，让大家广泛的接受了持续集成和持续交付的概念，解决了自动编译、测试、部署代码的问题 第二波浪潮以 GitLab CI 为代表，以代码仓库为入口，设计理念是流水线即代码，开箱即用，使用体验极好，好比大家从 Eclipse 切换到 IntelliJ IDEA，解决了流水线的管理问题 第三波浪潮以 GitHub Actions 为代表，设计理念是将可复用的能完成复杂但是高频任务的脚本封装为原子（Actions），原子和编程语言的函数一样，有入参、出参。解决了流水线里脚本复用难的问题GitHub 发现了很多流水线里任务是类似的，可以共享出来，故提出了原子的概念，支持使用 JavaScript、yml、Docker 镜像等方式开发原子，提倡通过 GitHub Marketplace（市场）分发原子，降低了大家使用流水线的成本，最终带来了 GitHub Actions 生态的繁荣，目前 GitHub 市场里有 1.7 万个原子，涉及开发工作流的方方面面，这是世界上最大的流水线生态优势GitHub Actions 优势主要有以下几点 SaaS 软件，运行稳定，承载能力高，能应对企业级复杂流水线的编排，支持混合云部署（可以在客户自己的服务器环境里执行任务） 简单的按需付费定价模式，根据硬件配置和使用分钟数收费。开源仓库免费使用，私有仓库每月有一定的免费配额 生态繁荣和强大，市场每月新增 400+ 原子 支持丰富的 GitHub 事件，扩大了流水线的使用场景产品分析简单介绍下 GitHub ActionsGitHub Actions 把流水线配置存在 YAML 文件里，可以通过代码仓库来管理 YAML，流水线的结构类似下图GitHub Actions 通过语法规范 实现了串行、并行、矩阵编译、指定在哪些机器上执行任务、监听 GitHub 事件、审批、原子引用、流水线复用等流水线功能几个基础概念简单介绍下 Event（事件），用于触发流水线 Step（步骤），最小的可执行代码单元，能够引用原子 Job（任务），包含一串顺序执行的 Step。job 之间可以顺序执行也可以并行执行 Runner（执行任务的服务器），通过标签来区分，Job 可以在具有同一标签的任何服务器上执行功能脑图把功能梳理下可得到如下脑图业务流程核心业务流程如下产品架构GitHub Actions 不仅仅能解决 DevOps 领域的问题，更广义的来讲，他可以作为自动化引擎来使用。例如如果你上班早上总是忘记打卡，可以让他每天上午10点定时运行一下，先请求打卡数据 api 判断你有没有打卡，如果发现没有打卡，就给你发送企业微信通知提醒你打卡思考题 🤔如果让你上线一个 CI/CD 平台，你应该怎么做？先分析下市场现在 CI/CD 已经是红海了，领先的一体化 DevOps 平台如 GitHub、极狐、腾讯云 CODING、阿里云 云效、华为云 CodeArts 都提供了流水线能力，如果再做一个通用型的 CI/CD 平台，很难有大的差异化如果专注于某个垂直领域，如移动端 CI/CD 平台，这块代表产品是 Bitrise，也做的很好了，除非能再找到一个足够大的垂直领域，否则很难脱颖而出如果不从商业角度考量，只是内部项目有需要，可以基于开源的产品二次开发再分析下必须要实现的功能假设我们来自研一个 CI/CD 平台，那么我们应该怎么做，既能满足客户的诉求，又能保持世界领先水平呢？涉及角色 平台提供方 客户 第三方系统客户想要开箱即用的体验，只想完成任务，不想关注流水线如何设计比如说客户只想快速完成 Java、Go 项目的编译、部署、灰度发布，这种情况下平台提供方应该提前设计好流水线，准备好所需的流水线运行环境，以可视化界面或者 API 的方式提供给客户使用，客户无需了解流水线设计的细节客户有自定义流水线的需求先解决问题，允许客户以 YAML 文件的形式设计流水线，并且提供原子开发和引入能力，后续有这方面需求的客户多了，平台提供方还可以花成本来建设可视化的编辑器，降低用户学习成本和实施成本第三方系统想要接入 CI/CD 平台比如说第三方系统想要将自己的安全检测、真机测试等能力接入 CI/CD 平台，使用这些能力的任务是异步执行的，即任务实际上在第三方系统自己的服务器环境里执行，这种情况下平台提供方应该如何提供接入机制呢？方案1: 任务里选择使用安全检测原子，runner 原子执行时，先向第三方系统发起任务开始请求，然后不停轮询第三方系统的 API 检查任务是否执行完成，原子执行完毕即代表任务执行完成缺点：占用平台提供方的 Runner 资源方案2：任务里选择使用安全检测原子，任务开启异步执行开关，原子执行时，向第三方系统发起任务开始请求，然后就释放 Runner 资源，但是 Job 仍处于运行中状态，直到第三方系统异步回调平台缺点：异步回调容易丢失消息，如果要做到稳定不丢失消息，流水线引擎的复杂度会变高方案3：任务里选择使用安全检测原子，任务选择只在标签为 A 的 Runner 上运行，第三方系统在自己的服务器环境里部署 Runner，标签注册为 A，第三方系统定期启动一次性的 Runner 会话，当流水线引擎发现了标签为 A 且空闲的 Runner 后，就将任务分发至该 Runner 运行，原子执行时，同步等待或者轮询检查安全检测是否结束，原子执行完毕即代表任务执行完成缺点：第三方系统需要维护 Runner 集群，增加了第三方系统的接入成本方案1最简单可靠，故选择方案1，Runner 资源可以通过 Serverless 实现 Runner 的弹性伸缩，这样成本也比较可控平台需要建立原子市场想办法复用 GitHub Actions 的原子生态，允许流水线能够使用 GitHub Actions 的原子，这是多赢的方案。平台提供方可以覆盖更多使用场景，第三方系统能节省接入平台的成本，客户能获得更多的产品价值如何管理 Runner 集群，支持 Windows、macOS、Linux 这 3 种操作系统？ 可以通过容器技术在 Linux、Windows 操作系统里运行 Runner，Kubernetes 能调度容器，最终实现 Runner 集群弹性伸缩的效果 macOS Runner 集群可以借助 Orka Platform 或 Tart 或 Docker-OSX 来搭建，macOS 弹性伸缩实现难度比较大，人工扩缩容也是可以的总结我介绍了 GitHub Actions 相比其他 CI/CD 平台的优势和创新点，对 GitHub Actions 进行了全面的产品分析，并思考了自研一个 CI/CD 平台应该怎么着手参考资料 https://blog.codecentric.de/github-actions-nextgen-cicd" }, { "title": "如何建设一个用于编译 iOS App 的 macOS 云服务器集群？", "url": "/2023/01/how-to-create-a-macos-server-cluster-for-compiling-ios-apps/", "categories": "技术", "tags": "思考", "date": "2023-01-14 19:50:00 +0800", "snippet": "现代软件开发一般会借助 CI/CD 来提升代码质量、加快发版速度、自动化重复的事情，iOS App 只能在 mac 机器上编译，CI/CD 工具因此需要有一个 macOS 云服务器集群来执行 iOS App 的编译。今天就来谈谈如何建设 macOS 云服务器集群购买 mac mini / Mac Studio 机器最简单的方式就是购买一批 mac 机器，买它个 1000 台，买回来后放入机房，把其中一台机器作为管理机，申请办公网访问这台机器的网络权限，每次要维护这批机器里的软件时，先从办公网进入管理机，然后从管理机在远程连接到其他机器。虚拟化 macOS 集群借助 macOS 官方的 Hypervisor.framework，可以分钟级创建 macOS 虚拟机，这种方式创建的虚拟机性能、稳定性、安全性都很高，可以持续采用更新、更快、更高级的 mac 硬件，最终实现更快的 App 编译速度。在企业内部申请 macOS 机器，需要经历申请预算、领导审批、采购、运输、部署至机房等繁琐步骤，现在可通过购买高配置的 mac 机器，然后再将其按需配置成多台虚拟机，减少了硬件维护成本，提高了扩容效率。这方面代表性产品有 https://github.com/cirruslabs/tart https://www.macstadium.com/anka移动端 CI/CD 平台 bitrise 采用的是这种方式，只不过他们做了很多自研工作，打造了 Gen2 编译基础设施，宣称能让客户更快、更频繁的发布 App云端管理 macOS 服务器自行购买并维护 mac 机器还是不太方便，成本很高，如果能云端管理、按需付费就更好了。亚马逊的 AWS 解决了这个问题，他家的 Amazon EC2 Mac Instances 能让我们按需申请 macOS 服务器，如果能接受云端服务的话，其实这种方式最省事。与这种服务类似的产品有 https://flow.swiss/mac-bare-metal https://www.scaleway.com/en/hello-m1/在 linux 里运行 macOS 虚拟机sickcodes/Docker-OSX 是最近流行的一个项目。 借助 KVM 技术，实现了在 linux 里运行 macOS 虚拟机 借助 docker，简化了 macOS 虚拟机的部署这个项目具有很多优势，例如 不依赖专门的 Apple 硬件，能够运行 KVM 的 x86_64 机器就行 能够通过 docker 容器来部署 macOS 虚拟机。未来借助 k8s，能够实现大规模 macOS 服务器的管理，轻易实现扩缩容也有风险 不太合规，macOS 正常只能在 Apple 硬件上运行 在 KVM 里运行 macOS，兼容性、性能、稳定性需要评估。如果出现问题需要付费找项目维护者解决我在裸金属上利用 Docker-OSX 项目确实跑起来了 macOS 虚拟机。运行该项目有以下几点要注意 linux 宿主机需要支持嵌套虚拟化（Nested Hardware Virtualization）。裸金属和物理机正常都支持 对 Linux 内核有要求，操作系统最好比较新，CentOS 8 可以，CentOS 7 不行在 Apple 硬件上用 k8s 来调度 macOS有没有可能在私有云里实现 aws 这种 mac 管理体验呢？MacStadium 家的 Orka 平台做到了。Orka 有以下好处1 - 降低了 mac 集群的管理成本花时间更少，例如管理服务器、在服务器上安装软件利用 Kubernetes 调度 mac 服务器，这与 Linux 服务器的管理保持一致，方便融入公司已有技术栈2 - 在真正的 Apple 硬件上运行 mac 虚拟机不用担心兼容性、稳定性、性能问题3 - 用心为开发者设计提供多种操作方式（命令行、REST API）来管理 mac 虚拟机对于企业来说，可以考虑购买 Orka 平台，在私有云里面搭建 macOS 云服务器集群。GitLab SaaS 版也是使用这种方式来提供托管的 macOS Runner 的总结我讲了建设 macOS 云服务器集群的 5 种方式，这些方式各有利弊，总的来说： 如果能接受使用云服务器，建议直接购买 AWS 的 Amazon EC2 Mac Instances，方便、成本低 自建机房，如果计划建设的 macOS 集群规模很大，建议购买 MacStadium 的 Orka 平台来建设，专业服务，避免踩坑，省时省力 自建机房，如果 macOS 集群规模比较小，对自动化要求不高，建议购买高配的 apple 硬件，然后通过 Hypervisor.framework 虚拟化出多台 macOS 机器，整体架构比较简单，也能解决问题" }, { "title": "使用第一性原理思维思考如何打造提高生产力的平台", "url": "/2022/09/use-first-principle-thinking-to-think-about-how-to-improve-business-productivity/", "categories": "技术", "tags": "思考", "date": "2022-09-03 11:00:00 +0800", "snippet": "引言现在全社会都在搞数字化转型，从政府到企业，那么为什么要进行数字化转型呢？本质上还是社会治理和企业经营难度变得更大了。以企业来说，转型的目标是为了实现有质量的活着，比如能赚更多的钱或者持续保持稳健运营，转型的核心是期望借助数字化技术构建一个管理体系，以应对外部环境动荡、企业竞争变化和技术更新发展带来的不确定性。数字化转型会带来大量的研发需求，如何更好更快的交付这些需求成为一个突出问题，该怎么打造一个平台去解决该问题？能不能用第一性原理思维去推导出发展方向？什么是第一性原理第一性原理指的是，将问题拆分成最基本的事实或规律，根据这些已知信息，不断推演和计算，从而找到解决问题最优路径的方法。该思维比较出名的应用例子有 埃隆·马斯克降低火箭发射成本的故事。将火箭发射成本进行细分，发展火箭可重复使用发射技术，简化设计和改进工艺以降低火箭制造成本 亨利·福特降低汽车制造成本的故事。将汽车拆解为最基本的部件，利用装配线和流水线工人批量制造汽车 埃隆·马斯克降低汽车电池组成本的故事。分析电池的原材料市场价格，不断逼近这个价格极限，采用自建工厂、改进电池设计、改进生产过程等措施来降低成本 乔布斯去掉手机物理键盘的故事。分析手机的组成部件，通过去掉物理键盘来扩大触摸屏区域，带来更好的体验和更低的制造成本如果采用类推思维去思考类推思维是指借助自己的感觉和经验积累知识的方法以国内外做得好的 3 个平台为例，分别是微软的 Power Platform、创业公司轻流、华为的应用魔方。这些平台都以帮助企业快速开发应用、应对市场发展为目的微软 Power Platform除了上述 5 大产品外，还具有以下功能 Dataverse：可以进行数据的管理，相当于是个更易于使用的数据库 连接器：可以和大量的 API、服务、系统进行通信 Common Data Model：标准化和可扩展的数据模型，能方便数据的流转和利用，由微软和行业合作伙伴多年积累而成 生态系统：Power Platform 可以连接到微软的生态系统，例如 Azure（全球第二大云计算平台）、Microsoft 365（包含 Office 办公套件和 Teams）、Dynamics 365（包含 ERP 和 CRM 功能） Power Fx：低代码语言，类似 Excel 的公式，相比专业的编程语言更易于使用Power Platform 的产品理念是让没有技术背景的人、开发者都能轻松高效的解决业务问题。产品架构上以 Dataverse 为核心，内置数据模型（Common Data Model）降低业务建模成本，可视化的 UI 编辑器（Power Apps、Power Pages）可降低应用开发成本，报表制作工具（Power BI）可挖掘出数据的价值，效率工具（Power Automate 和 Power Virtual Agents）可将员工从枯燥重复的任务中解放出来，这一整套组合拳下来，期望帮助企业更好的发展业务，节省运营成本微软这么做了，我们是不是也要这么做呢？即 开发一套非专业开发者也能学会使用的数据库 开发可视化的 UI 编辑器，支持移动应用、门户、报表的制作 开发效率工具，实现任务的自动化，支持桌面软件、Web、即时聊天窗口 开发一种非专业开发者也能学会使用的编程语言轻流All-in-One 应用开发平台专有轻流，面向多角色的企业级平台产品轻流是从表单+流程管理这种高频场景切入的，面向的是业务人员而不是开发者，随着行业案例的积累，客户的增多，逐步发展为快速解决业务问题的应用开发平台和面向中大客户的企业级平台这两个套餐分级迭代。值得一提的是轻流和神策一样，也采用了订阅制收费模式，这样保证了不管是公有云还是私有化部署都能以高迭代速度去服务客户轻流这么做了，我们是不是也要这么做呢？即 开发一套通过表单来进行数据建模的工具，支持流程管理，支持自动化任务 开发可视化的 UI 编辑器，支持移动应用、门户、报表的制作 提供插件能力，方便 IT 人员进行系统集成和功能扩展 持续集成外部主流系统和业务能力，丰富平台生态华为应用魔方 AppCubeAppCube 介绍AppCube 在华为内部的应用AppCube 提供了全场景的开发能力： 对于开发者，可以用低代码开发能力开发应用 对于业务人员，可以用零代码能力，通过一些拖拽和配置构建出应用 对于面向专业领域的专业问题，如复杂业务算法，开发者可以使用 Java、Python 等语言开发，以微服务的方式发布到 AppCube 低代码平台进行托管和调用AppCube 的做法类似 Power Platform，对于无代码技术路线，提供可视化的学习成本低的开发方式；对于低代码技术路线，提供模拟软件开发过程的组件或服务去方便开发者使用；对于代码技术路线，提供应用的部署和运维能力思考 这些平台都提供了数据建模能力，一种是类似数据库的建模过程，一种是表单的建模过程 这些平台都提供了 UI 编辑器，可以进行前端页面的可视化搭建，支持多平台（移动端、Web 端） 这些平台都提供了代码开发能力，可以进行代码级别的逻辑编写 这些平台都提供了扩展机制，可以集成外部系统和业务能力看来，如果要做一个生产力平台，就必须提供这四大功能采用第一性原理思维去思考企业经营就是解决客户问题的过程。从以往的经验来看，有两类人解决问题时，需要数字化的解决方案 还没有验证过某个问题存在客户需求，想要尽快验证 已经验证过客户需求的存在，需要尽快上线第一类人，如果采用代码开发的方式实现需求，成本是非常高的，可以想办法通过其他方式去低成本验证，比如美团外卖刚上线时都是客服人工处理外卖订单，Stripe 早期是手动填写交易信息发送到银行第二类人，客户需求已经验证过了，就差个程序员了，这个时候沟通成本、人员开发成本、时间成本占大头如何解决第二类人的问题呢？ 要想提高生产力，最好是让有问题的人能尽快解决掉问题举三个例子 比如我们碰到某个数学题不会解，提高生产力的方式是有个老师在旁边教我们解。 比如我们想去某个景点玩却发现路途遥远，提高生产力的方式是有辆车可以载我们过去。 比如我们饿了肚子呱呱叫，家里没有任何食材和厨具，提高生产力的方式是去最近的餐馆或者叫外卖，而不是自己做饭从这条定律出发，我们就要思考如何能让有问题的人尽快解决问题。理想情况，最快解决问题的方式就是花钱请专业的人解决问题，将问题外包出去，效果最好，性能最好。除了这种方式外还有其他第二好的方式吗？ 保证问题解决速度的同时降低工具的使用难度就像以前点火需要钻木取火，后来打火石点火、火柴点火，到现在的打火机点火，越来越方便，使用难度越来越低，点火越来越快，这样生产力才得到了巨大的提升那么对于开发数字化的解决方案，怎么做才能既快速解决问题使用难度又低呢？数字化解决方案一般需要经历数据的获取、处理、存储、展示这四个过程。我们依次来看数据的获取当前普及率最高的数据获取方式是 Excel，表单的出现让数据填写体验更好，但是当操作大量数据时，Excel 的效率是最高的数据的处理数据的处理逻辑，Excel 提供的方式是公式，开发者提供的方式是代码，使用难度最低的是配置化（在配置界面勾勾选选）、用例化（复用已存在的逻辑），不需要去记忆复杂的公式用法，不需要去练习如何写代码，这里的难点在于当逻辑复杂后如何保持使用难度不指数级增长数据的存储格式化的数据（如信用卡号码、电话号码、家庭住址、商品名称）一般存在 Excel 或者数据库里，非格式化的数据（如 word、音频、视频）一般直接存在硬盘上。使用难度最低的是 Excel，一个个格子，把数据填进去就行数据的展示目前的展示终端太丰富了，手机 APP、网站、小程序、电脑软件、电视大屏等等，这个也是最难降低使用难度的部分，个性化需求太多了，要想做到速度最快使用难度最低，需要一个使用难度很低的 UI 编辑器，最好能像 Markdown 那样简单，只关注内容，样式啥的自动渲染，PPT 对于普通人来说都太难了综上， A：对于数据的获取和存储，我们需要一种类似 Excel 的方案，既能存储数据，使用难度又低，使用效率还很高 B：对于数据的处理，我们需要一种配置化、用例化的方案，能应对从简单到复杂的各种逻辑，且保持使用简单 C：对于数据的展示，我们需要一种只关注内容，自动匹配好样式的方案，支持多种屏幕和终端解法 对于 A，我们可以参考国外的 Airtable、国内飞书的多维表格、腾讯文档在线表格，支持多人协作，支持大批量数据的操作，支持多种数据类型Airtable 截图多维表格截图 对于 B，我们可以参考苹果的捷径，国外的 Zapier，这些工具可编排逻辑，可通过引入更多应用和操作来扩展使用场景，在使用难度和逻辑可维护性上做到了一个好的平衡苹果捷径截图Zapier 截图 对于 C，我们可以参考国外的 Notion、国内的息流，提供让用户更聚焦内容的工具，通过 AI 或者模版化的方式自动匹配好样式Notion 截图Markdown 截图总结如果想打造一个能提升生产力的平台，最好方式就是用最快速度帮助遇到问题的人解决掉问题如果采用类推思维去思考，我们可能得去做非常大而全的事情，比如 建设数据建模能力 建设 UI 编辑器能力 建设代码开发能力 建设扩展机制如果采用第一性原理思维，我们就可以将生产力划分为数据的获取、处理、存储、展示四个阶段，运用既快且使用难度低的工具去处理，即 建设新一代表格能力，支持在线多人协作，支持多种数据类型，支持大批量数据 建设逻辑编排能力，类似捷径和 Zapier，实现逻辑的顺序编排和扩展 建设更聚焦内容的编辑器能力，用户只需编写内容，通过 AI 和模版等方法自动匹配好样式" }, { "title": "IPV6 环境下用 iPhone 访问 windows 10 远程桌面", "url": "/2018/12/access-windows-10-with-iphone-in-ipv6-network/", "categories": "技术", "tags": "Windows", "date": "2018-12-01 14:43:19 +0800", "snippet": "前言最近意外发现家里用的移动宽带已经获取到了 IPV6 地址，然后又意外发现移动 4G 也是可以访问 IPV6 的Windows 网络情况iOS 网络情况2010 年开始在校园网用 IPV6, 到现在已经过去 9 年了，现在终于开始普及了需求我们有时候需要访问家中的电脑，如果没有公网 IP 的话，实现起来就比较麻烦在 IPV4 环境下，IP 数量比较少，很多运营商不会给设备分配独立的 IP，而是共用一个出口 IP，这种情况下一般需要通过额外的软件(例如 frp)去搭建隧道来实现IPV6 则没有这个烦恼，它可以给地球上的每粒沙子都分配一个 IP 地址，既然现在我电脑已经有了独立的 公网 IPV6 地址，那现在是时候采用更简单的方式去访问指定电脑了操作步骤允许远程连接到此计算机点击 远程桌面 的显示设置选择允许远程连接到此计算机这个选中后，我看防火墙会自动放行相关连接，不用再单独去防火墙里允许远程桌面的程序通过了 电脑防火墙如果不放行的话，是无法连接到该电脑的查看电脑 IPV6 地址去 设置 -&amp;gt; 网络和 Internet -&amp;gt; 更改适配器选项 查看 以太网 的状态点击详细信息，查看电脑的 IPV6 地址这个临时 IPV6 地址就是你电脑的 公网 IPV6 地址了，记下它使用 RD Client 访问 windows 10 远程桌面下载 Microsoft 官方出品的 RD Client填好电脑的公网 IPV6 地址使用移动 4G 访问这个连接，正常情况下你就可以访问到你的电脑了进阶技巧设置域名解析到 IPV6 地址如果你有域名的话，可以考虑把域名解析到这个 IPV6 地址，然后以后就不用记那么长的 IPV6 地址了，通过域名就可以访问你的电脑PS. 运营商一般会屏蔽 80 端口，所以即使配了域名也无法直接用来访问自己电脑上的网站哦" }, { "title": "如何安装托管在私有 GitLab 实例上的 composer 包?", "url": "/2018/01/how-to-install-composer-package-hosted-on-your-own-gitlab-installation-instance/", "categories": "技术", "tags": "PHP", "date": "2018-01-27 12:54:19 +0800", "snippet": "composer 包安装方式有哪几种?一般来说开源的 PHP 包都会放在 packagist.org, Composer 直接安装就行私有包有以下几种安装方式 在 packagist.com 购买付费服务, 不用自己维护, 省心 搭建 Satis 实例, 相当于搭建了私有的 packagist.org, 需要自己维护服务器 购买了 GitHub 企业版, 将包托管在企业版上 搭建 GitLab 社区版 实例, 将包托管在这上面可以根据各自情况选择合适的方案, 笔者在这篇文章中只讲解如何安装托管在私有 GitLab 实例上的包环境信息 假设私有 GitLab 实例网址为 http://git.demo.com 要安装的包名为 demo/fly配置 composer 以使用 GitLab API因为网络原因, 项目里一般会把 vendor 目录也加入版本管理, 某个依赖如果有 .git 目录会造成依赖不会被加入到 git 中Composer 支持使用 --prefer-dist 参数, 只下载相应的 zip 包, 不 clone 源码, 这样下载下来的依赖不会带有.git目录但只有在使用 GitLab API 的前提下, --prefer-dist 参数才会生效, 否则下载下来的依赖还是会带有 .git 目录修改 composer 全局 config 文件路径: ~/.composer/config.json 因为 git.demo.com 使用 HTTP 协议, 所以secure-http要设为false 设置 gitlab-domains, 告诉 Composer 相应的域名可以使用 GitLab API内容修改为如下{ &quot;config&quot;: { &quot;secure-http&quot;: false, &quot;gitlab-domains&quot;: [ &quot;git.demo.com&quot; ] }}修改 composer 全局用户认证信息 文件路径: ~/.composer/auth.json 设置 token 后, 才有权限访问 GitLab API去 http://git.demo.com/profile/personal_access_tokens 新建一个 personal access token内容修改为如下{ &quot;gitlab-token&quot;: { &quot;git.demo.com&quot;: &quot;your person access token in git.demo.com&quot; }}安装步骤以 demo/fly 为例添加 repository修改 composer.json, 添加如下代码&quot;repositories&quot;: [ { &quot;type&quot;: &quot;vcs&quot;, &quot;url&quot;: &quot;http://git.demo.com/demo/fly.git&quot; }],告诉 composer 去哪找 demo/fly 依赖安装依赖composer require --prefer-dist demo/fly参考资料 composer repository 文档 composer gitlab-token 文档 Why composer clone my private gitlab instead only download it Composer Update Fails due to Github Authorization 使用 Satis 创建 Composer 私有库" }, { "title": "如何使用 Markdown 写 PPT?", "url": "/2018/01/how-to-write-presentation-using-markdown/", "categories": "技术", "tags": "markdown", "date": "2018-01-12 01:17:51 +0800", "snippet": "为啥要用 Markdown 去写 PPT? 相比 PowerPoint 更轻量, 更灵活 能够高亮代码 专注文字内容, 节省排版和制作动画的时间用什么工具去生成 PPT?有以下几个工具可供选择reveal.jsHakim El Hattab 创造了 reveal.js, 他随后创建了 Slides, 这是一个使用 reveal.js 创建幻灯片的网站cleaver为 hacker 准备的, 只需写 markdown, 然后用工具生成 html 网页md2googleslidesgoogle 推出的一个工具, 需要使用 Slides APInodeppt功能与 reveal.js 类似, 社区活跃度不如 reveal.js根据简单, 功能丰富, 社区活跃度这几个维度最终选择使用 reveal.js 去生成 PPTreveal.js 的现状有以下几种方式去使用 reveal.js 将 markdown 嵌入到 html 文件中 只写 markdown, 然后使用工具将 markdown 渲染成 html, 代表工具有 reveal-md, Pandoc 建立 reveal.js 网站, 左边写 markdown, 右边可以实时渲染 方案 1 vs 方案 2由于写 ppt 的过程中需要经常预览, 方案 1 和 2 效果其实差不多方案 1 不需要安装额外的工具, 将 markdown 嵌套在 html 文件中, 打开浏览器就可以预览了, 实现的方式更简单一些所以笔者更偏好方案 1方案 1 vs 方案 3方案 3 体验会最好, 但如果想实现方案 3, 得搭建一个网站, 将 markdown 存到 数据库里, 实现比较复杂综上, 选择方案 1reveal.js 使用总结目录结构从 GitHub 上下载 reveal.js 压缩包, 解压后内容如下, 重要的目录就这几个, 其他都是一些测试文件或者示例|____2017| |____12-28.html| |____images| | |____12-28-1.png| | |____12-28-1.png| | |____12-28-1.png|____README.md|____template.html|____reveal.js| |____css| |____js| |____lib| |____plugin以年份划分目录结构, 图片都放在同一年下面的 images目录下, 以当天日期+序号的格式命名图片模版文件template.html, 内容如下&amp;lt;!doctype html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt; &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt; &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot;&amp;gt; &amp;lt;title&amp;gt;reveal.js&amp;lt;/title&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;../../../css/reveal.css&quot;&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;../../../css/theme/black.css&quot;&amp;gt; &amp;lt;!-- Theme used for syntax highlighting of code --&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;../../../lib/css/zenburn.css&quot;&amp;gt; &amp;lt;!-- Printing and PDF exports --&amp;gt; &amp;lt;script&amp;gt; var link = document.createElement(&#39;link&#39;); link.rel = &#39;stylesheet&#39;; link.type = &#39;text/css&#39;; link.href = window.location.search.match(/print-pdf/gi) ? &#39;../../../css/print/pdf.css&#39; : &#39;../../../css/print/paper.css&#39;; document.getElementsByTagName(&#39;head&#39;)[0].appendChild(link); &amp;lt;/script&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;div class=&quot;reveal&quot;&amp;gt; &amp;lt;div class=&quot;slides&quot;&amp;gt; &amp;lt;section data-markdown data-separator=&quot;^\\n---\\n$&quot; data-separator-vertical=&quot;^\\n--\\n$&quot;&amp;gt; &amp;lt;textarea data-template&amp;gt; TODO: your markdown here &amp;lt;/textarea&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;script src=&quot;../../../lib/js/head.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&quot;../../../js/reveal.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt; // More info about config &amp;amp; dependencies: // - https://github.com/hakimel/reveal.js#configuration // - https://github.com/hakimel/reveal.js#dependencies Reveal.initialize({ dependencies: [ {src: &#39;../../../plugin/markdown/marked.js&#39;}, {src: &#39;../../../plugin/markdown/markdown.js&#39;}, {src: &#39;../../../plugin/zoom-js/zoom.js&#39;, async: true}, {src: &#39;../../../plugin/notes/notes.js&#39;, async: true}, { src: &#39;../../../plugin/highlight/highlight.js&#39;, async: true, callback: function () { hljs.initHighlightingOnLoad(); } } ] });&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;看起来很多东西, 用的时候只需知道在 &amp;lt;textarea data-template&amp;gt;&amp;lt;/textarea&amp;gt;标签中间写 Markdown 内容就好了这个 html 文件主要就是引用一些 JS, CSS 文件, 负责将 Markdown 渲染成 PPT如何使用?以年份划分目录结构, 将 template.html 复制到相应的目录下, 可以重命名为月-日.html, 在&amp;lt;textarea data-template&amp;gt;&amp;lt;/textarea&amp;gt;标签中间写 Markdown 内容, 写完后保存好, 用浏览器打开该html文件查看幻灯片也可以将这些文件上传到服务器上, 将链接分享给别人, 别人就可以查看你的 PPT 了一些概念分页Reveal.js 里页面有两种页面类型，横向的一级页面(slide)、纵向的子页面(fragment)。后者务必嵌套在前者里面。键盘上的左右箭头控制一级页面，上下键移动子页面 一级页面可以认为是不同章节, 子页面可以认为是同一章节的不同小节 用---区分一级页面, 用--区分子页面, 注意这两个符号上下都需要空行例如Slide 1---Slide 2fragment1--fragment2---Slide 3元素属性 (Element Attributes)- Item 1 &amp;lt;!-- .element: class=&quot;fragment&quot; data-fragment-index=&quot;2&quot; --&amp;gt;- Item 2 &amp;lt;!-- .element: class=&quot;fragment&quot; data-fragment-index=&quot;1&quot; --&amp;gt;每一行 Markdown 语句, reveal.js 认为是一个元素(element)上面的语法意思是, 展示一个列表, 按下键盘右方向键会先显示 Item 2, 再按一次, 才会显示 Item 1我们可以利用元素属性给内容添加一些动画和样式常用技巧下面列出了一些常用 CSS 技巧, 更多技巧可以查看 reveal.js 官方文档, reveal.js Demo控制图片大小![Alt text](./images/clear_cache.png) &amp;lt;!-- .element: style=&quot;width: 500px;&quot; --&amp;gt;左右对齐左对齐方案一 &amp;lt;!-- .element: style=&quot;text-align: left;&quot; --&amp;gt;右对齐方案一 &amp;lt;!-- .element: style=&quot;text-align: right;&quot; --&amp;gt;文字颜色你好 &amp;lt;!-- .element: style=&quot;color: #ff0000;&quot; --&amp;gt;放大页面按住 ALT 键, 用鼠标点击想要放大的地方, 再点击一次, 会恢复原状页面跳转在地址后面加上数字, 例如https://revealjs.com/#/2 会跳到第2页https://revealjs.com/#/2/2 会跳到第2页的第2个子页面参考资料 Reveal.js：把你的 Markdown 文稿变成 PPT 前端大神都用什么做 PPT？" }, { "title": "Android NDK 介绍与使用示例", "url": "/2016/09/how-to-use-ndk-and-generate-so-file-in-android-studio/", "categories": "技术", "tags": "android", "date": "2016-09-21 14:02:27 +0800", "snippet": "简单介绍NDK 是干啥的？全称 Native Development Kit, 允许你在 Android 应用中使用 C 或 C++ 代码NDK 的好处 NDK 可以生成 .so 文件, 方便代码共享 增加反编译的难度 提高性能使用示例版本说明 Android Studio: 2.2 Android Plugin for Gradle: com.android.tools.build:gradle:2.2.0 Gradle: 2.14.1准备工作在 Android Studio 里下载好 NDKAndroid Studio 2.2 稳定版已发布，这个版本增强了 C++ 的开发能力，能够使用 ndk-build 或 CMake 去编译和调试项目里的 C++ 代码ndk-build 或 CMake 比用 Gradle 去编译 C++ 更好因为 NDK 套件里自带 ndk-build, 不需要再额外安装 CMake, 为了简单起见以下示例都用 ndk-build 去编译 C++注意 为了能够在 Android Studio 里使用 CMake 或 ndk-build，你必须使用 Android Studio 2.2 或更高版本 和 Android Plugin for Gradle version 2.2.0 或更高版本 由于 Android Studio 编译 C 和 C++ 代码默认使用 CMake, 因此我建议使用 Experimental Android Plugin for Gradle 的用户也切换到 Android Plugin for Gradle version 2.2.0 或更高版本，这样既可以使用 Android Plugin for Gradle 的稳定版本，也可以使用 CMake 或 ndk-build 来提高编译速度Android.mk 和 Application.mk简单来说 Android.mk 用来描述需要生成哪些模块的 .so 文件 Application.mk 用来描述如何生成 .so 文件，生成静态库还是动态库这里给出示例文件Android.mkLOCAL_PATH := $(call my-dir)include $(CLEAR_VARS)LOCAL_MODULE := gaussianBlurLOCAL_SRC_FILES := blur.cppLOCAL_LDLIBS := -lloginclude $(BUILD_SHARED_LIBRARY) 宏函数 my-dir 是由编译系统提供的，会返回当前目录的路径（当前目录指的是包含 Android.mk 的目录） CLEAR_VARS 这个变量也是由编译系统提供的，会清除很多 LOCAL_XXX 变量 以上两行命令基本上是固定的，不需要去动 LOCAL_MODULE 指定模块名称，会自动生成相应的 libgaussianBlur.so 文件 LOCAL_SRC_FILES 指定这个模块要编译的 C++ 文件 LOCAL_LDLIBS 指定这个模块里会用到哪些原生 API, 详见 Android NDK Native APIs BUILD_SHARED_LIBRARY 根据你之前定义的 LOCAL_XXX 变量，决定要编译啥，如何去编译，这行命令一般也不需要动，固定的 Application.mkAPP_STL := gnustl_staticAPP_STL 指定使用哪些 C++ 运行时, 详见 C++ Library SupportAndroid.mk 和 Application.mk 都放在 jni 目录下项目文件结构如下|____app| |____src| | |____main| | | |____jni| | | | |____Android.mk| | | | |____Application.mk| | | | |____blur.cpp如何使用 C++ 代码?前面已经给出了 Android.mk 和 Application.mk 的示例，下面在 build.gradle 里配置 externalNativeBuild 就可以自动编译 C++ 代码了示例内容如下defaultConfig { applicationId &quot;com.example.app&quot; minSdkVersion 16 targetSdkVersion 24 versionCode 102 versionName &quot;0.2&quot; externalNativeBuild { ndkBuild { arguments &quot;NDK_APPLICATION_MK:=src/main/jni/Application.mk&quot; cFlags &quot;-DTEST_C_FLAG1&quot;, &quot;-DTEST_C_FLAG2&quot; cppFlags &quot;-DTEST_CPP_FLAG2&quot;, &quot;-DTEST_CPP_FLAG2&quot; abiFilters &quot;armeabi-v7a&quot;, &quot;armeabi&quot; } }}externalNativeBuild { ndkBuild { path &quot;src/main/jni/Android.mk&quot; }} path 用来指定 Android.mk 的路径 arguments 用来指定 Application.mk 的路径 abiFilters 用来指定生成哪些平台的 .so 文件 cFlags 和 cppFlags 是用来设置环境变量的, 一般不需要动，和示例一样就好，好了，现在运行项目，就可以将 blur.cpp 自动编译为 libgaussianBlur.so 文件了手动生成 .so 文件如果能直接引用生成好的 .so 文件，可以避免重复编译 .so 文件，从而加快应用 build 速度下面是手动生成 .so 文件的步骤# 进入 main 目录cd app/src/main# 生成 .so 文件/Users/lee/Library/Android/sdk/ndk-bundle/ndk-build NDK_PROJECT_PATH=. NDK_APPLICATION_MK=./jni/Application.mk NDK_LIBS_OUT=./jniLibs执行这个命令后，会在 app/src/main/jniLibs 目录生成各个平台的 .so 文件如果需要把 .so 文件共享给其他人，把这些平台下的 .so 文件发给其他人就好了/Users/lee/Library/Android/sdk/ndk-bundle/ndk-build 是我下载好的 NDK 目录路径 NDK_PROJECT_PATH 指定项目路径, 会自动读取这个目录下的 jni/Android.mk 文件 NDK_APPLICATION_MK 指定 Application.mk 的位置 NDK_LIBS_OUT 指定将生成的 .so 文件放到哪个目录，默认 Android Studio 会读取 jniLibs 目录下的 .so 文件, 所以我们把 .so 文件生成到这测试结果: （测试均在 clean 项目后进行）引用 .so 文件前平均耗时 1m 27s引用 .so 文件后平均耗时 47s我们可以看到 build 速度快了将近一倍调试 NDK让 NDK_LOG 变量为1，就可以打印日志信息ndk-build -e NDK_LOG=1需要注意的地方Android Studio 如何知道项目里用了 C 或 C++ 代码并自动去编译它 ？Android Studio 会检查 app/src/main/jni 目录下是否有 C 或 C++ 代码, 如果有, 就根据 build.gradle 里的配置调用 CMake 或 ndk-build 去编译它externalNativeBuild 这个我怎么知道如何配 ?可以参考 Building C++ in Android Studio with CMake or ndk-build这里有个问题，官方示例里的 targets 参数我不知道怎么用，如果设置为和 Android.mk 里 LOCAL_MODULE 一样的会报错误，不加就能运行这里有个 bug 报告, Inconsitency between LOCAL_MODULE and gradle target name in ndk-build integration生成的 .so 文件需要优化么？参考这个 SO 问题 Android NDK release build简单来说就是，默认生成的 .so 文件就是已经优化过的，不需要额外做操作了参考资料 Bugtags V1.2.7 引入 NDK SO 库 What you should know about .so files 使用AndroidStudio进行NDK开发（一） ABI Management Android NDK编译本地文件以及引用第三方so文件 Android Studio 2.2 Add C and C++ Code to Your Project NDK can’t find the application directory" }, { "title": "用 Git 和 Git hooks 解决多地开发时 MySQL 同步问题", "url": "/2016/03/solve-the-problem-of-mysql-synchronization-in-multiple-places-with-git-and-git-hooks/", "categories": "技术", "tags": "git", "date": "2016-03-17 16:38:45 +0800", "snippet": "需求我经常在家和公司的不同电脑上开发一个Web项目, 代码托管可以用GitLab或者GitHub, 这解决了代码的多地同步问题, 但是MySQL一直没发现一个好的方式来同步。目前MySQL多地同步的方案主要有以下几种 使用可远程连接的MySQL, 多地开发时直接连接这个数据库, 这个方案如果网速不好的话，就不合适 A 地使用mysqldump导出sql文件，发送给 B 地，B 地再恢复到MySQL中，这个方案手动操作的话很麻烦，费时 使用git和git hooks在提交和合并代码时自动相应的导出和恢复数据库, 这个方案自动化了MySQL的导出和恢复工作，简直完美条件准备 mysql 5.6+, 修改my.cnf文件, 在[client]下面添加 user=你的 MySQL 账号password=你的 MySQL 密码 以解决MySQL5.6 Using a password on the command line interface can be insecure的问题 git 坚果云(用于差量同步导出的sql文件)动手干 首先编辑pre-commit文件，这个钩子在代码commit之前可以执行脚本 [your editor] /path/to/your/repo/.git/hooks/pre-commit 写pre-commit钩子, 我们将要告诉系统去把我们的数据库dump到坚果云里面 mysqldump --skip-extended-insert demo &amp;gt; /Users/lee/我的坚果云/demo.sql 给pre-commit加上可执行权限 chmod +x /path/to/your/repo/.git/hooks/pre-commit 现在我们来写post-merge钩子，我们将要告诉系统在git合并代码的时候，把放在坚果云上的sql文件恢复到本地的MySQL数据库中 [your editor] /path/to/your/repo/.git/hooks/post-merge 在post-merge文件里写上 mysql demo &amp;lt; ~/我的坚果云/demo.sql 不要忘记给post-merge加上可执行权限啦 chmod +x /path/to/your/repo/.git/hooks/post-merge 就是这样，现在当你commit和pull代码时，MySQL数据库可以自动的在多个地方同步啦总结使用坚果云来同步导出的sql文件是因为坚果云在国内是唯一一家靠谱的云存储公司，其他国内的公司倒闭的倒闭，阉割的阉割，就是不让人省心如果可以无障碍畅游网络的话，可以选择更好的Dropbox享受生活吧参考链接 Synchronizing a MySQL Database with Git and Git Hooks" }, { "title": "让 iTerm2 支持拖拽上传文件和右键下载文件", "url": "/2016/03/iTerm2-enable-shell-integration-to-support-file-uploads-and-downloads/", "categories": "技术", "tags": "macOS", "date": "2016-03-03 11:11:39 +0800", "snippet": "条件准备 iTerm2 version 3 nightly builds动手需要在你自己的机器和想通过ssh远程连接的机器上都安装shell integration自动安装curl -L https://iterm2.com/misc/install_shell_integration.sh | bash手动安装 下载这个脚本 curl -L https://iterm2.com/misc/`basename $SHELL`_startup.in &amp;gt;&amp;gt; \\~/.iterm2_shell_integration.`basename $SHELL` 在shell登陆脚本中添加如下命令 (.login for tcsh, .bash_profile for bash, .zshrc for zsh, or config.fish file for fish): source &quot;${HOME}/.iterm2_shell_integration.`basename $SHELL`&quot; 2个机器都安装好后，现在你就可以体验拖拽上传文件和右键下载文件了常见问题Download with scp 按钮是灰色的解决方案:远程机器的hostname不对，默认是localhost, 需要设置为远程机器的ip, 可以在你远程机器的shell登录脚本中通过如下命令设置环境变量export iterm2_hostname=你远程机器的ip记得这行命令要在source &quot;${HOME}/.iterm2_shell_integration.`basename $SHELL`&quot;之前哦!可以通过设置Preferences &amp;gt; Profiles &amp;gt; General &amp;gt; Badge为Hostname is \\(session.hostname)，来检测iTerm2所使用的hostname总结iTerm2 必须为iTerm2 version 3，可以在nightly builds中获取，目前的稳定版2.1是没有这个功能的有两个问题没注意，导致开启这个特色时花了2个多小时1个问题是只在我本地的机器上安装了shell integration, 没有在远程机器上安装shell integration第2个问题是远程机器的hostname不正确，导致功能不起作用, Download with scp按钮是灰色的这个比之前使用的的rz, sz体验要差一点，后者可以通过命令行来操作，更为快捷，但毕竟前者是官方支持，有人维护, 相信前者会越来越完善的参考链接 Shell Integration scp not connecting iTerm2 scp discuss" }, { "title": "实现 DownloadManager 下载完 apk 自动提示安装的功能", "url": "/2016/01/install-apk-automatically-after-the-download-is-complete-with-download-manager/", "categories": "技术", "tags": "android", "date": "2016-01-22 16:22:16 +0800", "snippet": "运行环境 Android 5.1.1, API 22解决方案 下载新版本的 apk public void downloadNewVersion() { mDownloadManager = (DownloadManager) getSystemService(DOWNLOAD_SERVICE); // apkDownloadUrl 是 apk 的下载地址 DownloadManager.Request request = new DownloadManager.Request(Uri.parse(apkDownloadUrl)); // 获取下载队列 id enqueueId = mDownloadManager.enqueue(request); } 注册接收下载完成的广播 BroadcastReceiver receiver = new BroadcastReceiver() { @Override public void onReceive(Context context, Intent intent) { long downloadCompletedId = intent.getLongExtra( DownloadManager.EXTRA_DOWNLOAD_ID, 0); // 检查是否是自己的下载队列 id, 有可能是其他应用的 if (enqueueId != downloadCompletedId) { return; } DownloadManager.Query query = new DownloadManager.Query(); query.setFilterById(enqueueId); Cursor c = mDownloadManager.query(query); if (c.moveToFirst()) { int columnIndex = c.getColumnIndex(DownloadManager.COLUMN_STATUS); // 下载失败也会返回这个广播，所以要判断下是否真的下载成功 if (DownloadManager.STATUS_SUCCESSFUL == c.getInt(columnIndex)) { // 获取下载好的 apk 路径 String uriString = c.getString(c.getColumnIndex(DownloadManager.COLUMN_LOCAL_FILENAME)); // 提示用户安装 promptInstall(Uri.parse(&quot;file://&quot; + uriString)); } } } }; // 注册广播, 设置只接受下载完成的广播 registerReceiver(receiver, new IntentFilter( DownloadManager.ACTION_DOWNLOAD_COMPLETE)); 取消注册广播, 不取消注册的话, 调用recreate时会报Are you missing a call to unregisterReceiver()?错误 @Override protected void onDestroy() { super.onDestroy(); unregisterReceiver(mBroadcastReceiver); } 提示用户安装 private void promptInstall(Uri data) { Intent promptInstall = new Intent(Intent.ACTION_VIEW) .setDataAndType(data, &quot;application/vnd.android.package-archive&quot;); // FLAG_ACTIVITY_NEW_TASK 可以保证安装成功时可以正常打开 app promptInstall.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); startActivity(promptInstall); } 就是这样，运行 app 看下效果吧 总结坑比较多，花了3天时间才完全实现这个效果1个坑是必须使用setDataAndType()，而不能单独使用setData()和setType()另外一个坑是getUriForDownloadedFile现在返回的是content://这种格式的链接了，无法用于启动intent最后一个坑是intent必须设置FLAG_ACTIVITY_NEW_TASK, 否则安装完成后无法正常打开app常见问题提示解析程序包时出现问题答mDownloadManager.getUriForDownloadedFile(enqueueId)返回的Uri是这种格式的content://downloads/my_downloads/83, 这种格式的Uri启动intent会报解析程序包时出现问题No Activity found to handle Intent No Activity found to handle Intent { act=android.intent.action.VIEW dat=/storage/sdcard/download/demo.apk typ=application/vnd.android.package-archive答可能原因1:有可能是没有权限读取这个文件或者文件路径错误可能原因2:// Intent promptInstall = new Intent(Intent.ACTION_VIEW)// .setData(data)// .setType(&quot;application/vnd.android.package-archive&quot;);Intent promptInstall = new Intent(Intent.ACTION_VIEW) .setDataAndType(data, &quot;application/vnd.android.package-archive&quot;);单独设置data和type也会造成这个错误，原因请看http://developer.android.com/reference/android/content/Intent.html#setData(android.net.Uri)你会发现无论何时你去设置data或者type, 另外一个都会自动的变为空, 例如: setData()会使得type参数值为空, 如果你想让两者都生效的话只能使用setDataAndType()提示应用程序未安装答有可能是因为APK 签名不一致, 比如之前是debug版(无签名), 现在你更新安装release版(有签名), 就会出现这个问题参考链接 Android 安卓系统提示应用程序未安装的解决方法 Android DownloadManager and Media Scanner Android: install .apk programmatically 为何必须用setDataAndType, 而不能单独设置data和type Android DownloadManager Example 在应用中更新App版本 DownloadManager补漏 全局接收下载完成的广播更新纪录 2016年3月8日 添加取消注册广播的代码 2016年1月22日 发布" }, { "title": "Fragment 最佳实践", "url": "/2016/01/best-practice-for-fragment/", "categories": "技术", "tags": "android", "date": "2016-01-20 16:13:38 +0800", "snippet": "初始化 Fragment对于不需要接收参数的Fragment，只需要实现public View onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)方法即可传参给 FragmentFragment需要提供一个静态的创建方法, 通常叫做newInstancepublic class DemoFragment extends Fragment { public static DemoFragment newInstance(String someTitle) { DemoFragment demoFragment = new DemoFragment(); args.putString(&quot;someTitle&quot;, someTitle); demoFragment.setArguments(args); return demoFragment; } ...}你可以这样获取参数public class DemoFragment extends Fragment { ... @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { // Get arguments String someTitle = getArguments().getString(&quot;someTitle&quot;, &quot;&quot;); } ...}你可以这样来调用DemoFragmentDemoFragment.newInstance(&quot;测试&quot;).show(getSupportFragmentManager(), &quot;DemoFragment&quot;);Activity 与 Fragment 之间的通讯方法1在Fragment里通过getActivity()来直接调用Activity里面的方法例如((MainActivity) getActivity()).doPositiveClick();方法2Activity通过实现Fragment里的接口来与Fragment进行交互例如第一步NewsItemFragment定义OnNewsItemSelectedListener接口public class NewsItemFragment extends Fragment { OnNewsItemSelectedListener mCallback; // Container Activity must implement this interface public interface OnNewsItemSelectedListener { public void onNewsItemSelected(int position); } @Override public void onAttach(Activity activity) { super.onAttach(activity); // This makes sure that the container activity has implemented // the callback interface. If not, it throws an exception try { mCallback = (OnNewsItemSelectedListener) activity; } catch (ClassCastException e) { throw new ClassCastException(activity.toString() + &quot; must implement OnNewsItemSelectedListener&quot;); } } ...}第二步NewsItemFragment调用onNewsItemSelected方法Overridepublic void onListItemClick(ListView l, View v, int position, long id) { // Send the event to the host activity mCallback.onNewsItemSelected(position);}第三步MainActivity里实现OnNewsItemSelectedListener接口public class MainActivity extends AppCompatActivity implements NewsItemFragment.OnNewsItemSelectedListener{ ... @Override public void onNewsItemSelected(int position) { //Do something with the position value passed back Toast.makeText(activity, &quot;Clicked &quot;+ position, Toast.LENGTH_LONG).show(); }}方法2比方法1更复杂，但是在某些情况下可能必须要这样实现注意 Fragment之间不可直接进行通讯，需通过Activity来控制参考文档 correctly creating fragments Best practice for instantiating a new Android Fragment Communicating between a fragment and an activity - best practices Communicating with the Activity implementing Alert Dialog Communicating with Other Fragments" }, { "title": "当发布新版本时自动递增 versionCode", "url": "/2016/01/versionCode-increase-automatically-when-a-new-release/", "categories": "技术", "tags": "android", "date": "2016-01-19 15:31:57 +0800", "snippet": "需求versionCode是android应用内部用来识别版本，判断新旧用的, 希望每次发布新版本时能够自动化的自增，避免人工修改可能带来的问题更好的做法import java.util.regex.Patterntask(&#39;increaseVersionCode&#39;) &amp;lt;&amp;lt; { def buildFile = file(&quot;build.gradle&quot;) def pattern = Pattern.compile(&quot;versionCode\\\\s+(\\\\d+)&quot;) def manifestText = buildFile.getText() def matcher = pattern.matcher(manifestText) matcher.find() def versionCode = Integer.parseInt(matcher.group(1)) def manifestContent = matcher.replaceAll(&quot;versionCode &quot; + ++versionCode) buildFile.write(manifestContent)}tasks.whenTaskAdded { task -&amp;gt; if (task.name.matches(&#39;assemble.*?Release&#39;)) { task.dependsOn &#39;increaseVersionCode&#39; }}这样就实现了每次发布新版本时，自动递增versionCode, 比普通做法的好处是，无需增加另外的文件, 更简便普通做法将versionCode放在一个文件里，每次发布新版本时，读取这个值，递增一次，最后再写回这个文件具体代码如下def versionPropsFile = file(&#39;version.properties&#39;)if (versionPropsFile.canRead()) { def Properties versionProps = new Properties() versionProps.load(new FileInputStream(versionPropsFile)) def code = versionProps[&#39;VERSION_CODE&#39;].toInteger() + 1 versionProps[&#39;VERSION_CODE&#39;] = code.toString() versionProps.store(versionPropsFile.newWriter(), null) defaultConfig { versionCode code versionName &quot;1.1&quot; minSdkVersion 14 targetSdkVersion 18 }}else { throw new GradleException(&quot;Could not read version.properties!&quot;)}参考链接 How to autoincrement versionCode in Android Gradle Versioning Your Applications Autoincrement VersionCode with gradle extra properties" }, { "title": "让 fresco 支持双指缩放与拖动", "url": "/2015/12/implement-pinch-zoom-and-drag-in-fresco-library/", "categories": "技术", "tags": "android", "date": "2015-12-16 17:37:02 +0800", "snippet": "需求fresco 的 SimpleDraweeView 不支持缩放与拖动，想尽可能简单的实现这个功能代码400: Invalid request说明在 PinchToZoomScaleDetector.java 的基础上实现了拖动操作, 不是很难, 在这个过程中最大的收获就是了解了ScaleGestureDetector和GestureDetector该如何使用, 好的, 尽情使用吧参考链接 Implementing pinch zoom and drag using Android&#39;s build in gesture listener and scale listener ZoomableDraweeView-sample PinchToZoomScaleDetector.java fresco docs" }, { "title": "为 apache 运行用户创建 ssh key", "url": "/2015/09/generate-ssh-key-for-apache-user/", "categories": "技术", "tags": "ubuntu", "date": "2015-09-21 17:49:00 +0800", "snippet": "解决方案方案1, 自动sudo -u apache ssh-keygen -t rsa方案2, 手动你必须复制root用户生成的key到apache用户的.ssh文件夹下, 软链接是不行的, 必须复制, 复制, 复制, 重要的事情说三遍假设apache的homedir是/var/www(检查/etc/passwd), root用户生成的私钥(key)是id_rsa-gitmkdir -p /var/www/.ssh/cp /root/.ssh/id_rsa-git /var/www/.ssh/id_rsa无需复制公钥(public key)注意 默认使用的私钥名称是id_rsa或id_dsa, 所以你复制过来的私钥名称得是这个 apache现在默认的运行用户为daemon, 他的homedir是/usr/sbin, 你可能得改成其他目录才能生效, 可以改成home/daemonchown -R apache:apache /var/www/.sshchmod 0700 /var/www/.sshchmod 0600 /var/www/.ssh/id_rsa需求说明apache 在执行git相关命令时报Could not create directory &#39;/usr/sbin/.ssh&#39;参考链接 http://stackoverflow.com/questions/7306990/generating-ssh-keys-for-apache-user" }, { "title": "自定义 ubuntu ssh 欢迎信息", "url": "/2015/09/custom-ssh-welcome-message-in-ubuntu/", "categories": "技术", "tags": "ubuntu", "date": "2015-09-14 16:34:16 +0800", "snippet": "步骤 打开/etc/update-motd.d, 这个目录下面的文件会在登录成功后按照序号的顺序先后运行 cd /etc/update-motd.d 我们找到00-header这个文件, 修改它, 在文件末尾添加如下代码 cat &amp;lt;&amp;lt; &quot;EOT&quot; /\\_/\\=( °w° )= ) ( // (__ __)//EOT 重新登录服务器就会看到如下效果啦小提示重新登录服务器后也许不会看到效果, 你再登录一次就肯定会看到啦, 就酱参考资料 http://stackoverflow.com/questions/25214084/cant-get-ascii-art-to-echo-to-console http://www.cnphp6.com/archives/50433" }, { "title": "chrome 刷新 dns 缓存小技巧", "url": "/2015/07/chrome-flush-sockets-dns-cache-tips/", "categories": "技术", "tags": "chrome", "date": "2015-07-07 17:55:29 +0800", "snippet": "Windows按住 ctrl + f5 一段时间Mac按住 Command + Shift + R 一段时间吐槽“域名切换ip后chrome无法立即生效”这个问题苦恼了好久, 之前花了很多时间都没有找到解决办法, 有的朋友还专门写了个脚本去刷新chrome sockets, 脚本用过一段时间觉得还是挺麻烦, 不是最优解参考资料 http://stackoverflow.com/questions/15289766/how-to-enable-instant-host-file-reading-in-chrome" }, { "title": "如何并发访问 Apache", "url": "/2014/08/how-to-test-apache-concurrency-access/", "categories": "技术", "tags": "apache", "date": "2014-08-02 16:08:20 +0800", "snippet": "需求需要同时访问某个链接, web服务器是apache条件准备apache需加载mod_status模块 打开apache配置文件httpd.conf, 搜索mod_status, 找到如下代码, 取消前面的#注释符 #LoadModule status_module modules/mod_status.so 配置查看apache服务状态的页面地址, 在httpd.conf最后一行添加如下代码```apache&amp;lt;location /server-status&amp;gt; sethandler server-status order deny,allow allow from all&amp;lt;/location&amp;gt;3. 访问http://localhost/server-status?refresh=1即可查看apache服务状态(其中1代表每秒刷新1次)### 实验过程* 实验1: 最开始想用浏览器来并发访问链接, 用的是chrome浏览器，同时打开多个标签页来访问, 额，看了半天，发现即使打开很多个标签页，apache只开启一个线程来处理访问请求，这样就导致多个标签页的访问请求是排队来处理的, 没有实现并发访问的需求* 实验2: 开启多个浏览器窗口来访问链接, 结果如实验1，apache只开启一个线程来处理访问请求* 实验3: 打开多个浏览器隐身窗口和浏览器正常窗口来访问链接，结果发现对于多个隐身窗口，apache只安排一个线程来处理访问请求，对于多个正常窗口来，apache也只安排一个线程来处理访问请求，也就是说，打开多个浏览器隐身窗口和正常窗口，apache只会开启两个线程来处理访问请求* 实验4: 通过apache自带的性能测试工具ab来实现并发访问，实验成功，满足并发访问请求，ab使用举例如下```bashab -n10 -c5 http://www.baidu.com/其中参数n代表总共要访问多少个请求 参数c代表并发访问多少个请求 最后的参数代表要访问的网址" }, { "title": "改进 Apache 日志", "url": "/2014/06/improved-apache-log/", "categories": "技术", "tags": "apache", "date": "2014-06-11 18:33:42 +0800", "snippet": "方案让log按照日期来存储ErrorLog &quot;|bin/rotatelogs.exe -l logs/discuz.dev.error.%Y.%m.%d.%H_%M_%S.log 5M&quot;CustomLog &quot;|bin/rotatelogs.exe -l logs/discuz.dev.access.%Y.%m.%d.log 86400&quot; common其中86400是指86400秒，正好是1天，表示按照1天的间隔来存储日志5M是指当错误日志容量大于5M时, 新建一个日志文件来存储rotatelogs.exe的参数l是指使用本地时间代替GMT时间作为时间基准, 避免记录的时间有错误过滤不必要的日志日志中一般没有必要记录静态的资源文件请求，比如图片、js、css等，将这些请求过滤后能大幅减少日志记录行数首先要保证一个叫setenvif的mod已经安装并enable，然后在VirtualHost的配置文件中添加&amp;lt;FilesMatch &quot;\\.(png|gif|jpe?g|js|css|swf)$&quot;&amp;gt; SetEnv dontlog 1&amp;lt;/FilesMatch&amp;gt;其作用是过滤静态的资源文件请求，dontlog表示一个变量，将这些过滤器的信息存储在这个变量中，最后在CustomLog行尾添加env=!dontlog，如CustomLog &quot;|bin/rotatelogs.exe -l logs/discuz.dev.access.%Y.%m.%d.log 86400&quot; common env=!dontlog自定义日志内容CustomLog &quot;|bin/rotatelogs.exe -l logs/intra.access.%Y.%m.%d.log 86400&quot; &quot;%h %t %V \\&quot;%r\\&quot; %&amp;gt;s %b \\&quot;%{Referer}i\\&quot; \\&quot;%{User-agent}i\\&quot;&quot; env=!dontlog%h ip%t 时间%V 访问的域名&quot;%r&quot; 访问的方法,路径%&amp;gt;s 状态码%b 返回给客户端的字节数&quot;%{Referer}i&quot; 访问来源&quot;%{User-agent}i&quot; user-agent参考链接 https://sdjkx.me/2013/10/apache-log-optimization/ http://blog.csdn.net/luhao/article/details/2969388 http://works.jinbuguo.com/apache/menu22/programs/rotatelogs.html" }, { "title": "通过 Git hooks 自动部署代码", "url": "/2014/05/automatic-deployment-with-git-hooks/", "categories": "技术", "tags": "git", "date": "2014-05-23 12:36:13 +0800", "snippet": "准备条件 假设web目录为/www/example.com 本地git目录为/website_dev 公共git仓库地址为http://git.example.com/test/test.git git用户为username, 密码为password步骤 在/www/example.com目录下执行以下命令 git clone http://git.example.com/test/test.gitgit remote add product http://username:password@git.example.com/test/test.git 在公共git仓库的hooks里创建post-receive(windows版本为post-receive.bat, linux版本才是post-receive)，在post-receive里添加代码 cd /www/example.comgit pull product master 在本地git目录/website_dev下执行 git push product master 搞定了, 请验证一下是否正确自动部署代码结语 自动输入帐号密码 http://username:password@git.example.com/test/test.git 这种链接结构可以让git记住密码，不用每次提交或签出时都输入账号密码，username是git的账号名称，password是账号密码 post-receive里的代码请根据实际情况进行修改 之前笔者的web服务器是linux的，代码部署用的是rsync, 还不错，挺好用的，现在web服务器换成windows的了，rsync在windows有一个移植版本，但需要收费，所以目前采用git自动部署方案" }, { "title": "discuz 因数据库权限错误报 Access denied for user", "url": "/2014/05/discuz-database-access-denied-for-user-localhost/", "categories": "技术", "tags": "discuz", "date": "2014-05-17 21:07:12 +0800", "snippet": "情景在现笔者根据数据库用户权限最小化的原则分配给discuz的数据库用户权限为select, insert, update, delete, index, 但是安装的时候报Access denied for user错误，经过一番资料查找，得出可能是缺少create, drop权限分析discuz的数据库用户权限至少应该包括select, insert, update, delete, index, create, drop, alter, 如果缺少的话, 可能会报Access denied for user错误, 或者其他错误参考链接 http://www.itlearner.com/article/3946" }, { "title": "windows 下配置一个更安全的 MySQL", "url": "/2014/04/windows-configure-secure-mysql/", "categories": "技术", "tags": "mysql", "date": "2014-04-08 16:22:40 +0800", "snippet": "环境 MySQL 版本：mysql-5.6.16-winx64.zip windows 版本：Microsoft Windows Server 2008 R2 Enterprise安装步骤 解压mysql-5.6.16-winx64.zip至e:\\software\\mysql 将e:\\software\\mysql\\bin添加至系统变量path中，使得cmd中可以直接运行bin文件夹下的程序 修改mysql目录下的my-default.ini为my.ini，按情况修改配置 将mysql安装为windows服务，然后启动mysql将mysql安装为windows服务C:\\Users\\Administrator&amp;gt; mysqld --install mysql --defaults-file=e:\\software\\mysql\\my.ini去除mysql服务C:\\Users\\Administrator&amp;gt; mysqld --remove启动mysqlC:\\Users\\Administrator&amp;gt; net start mysql关闭mysqlC:\\Users\\Administrator&amp;gt; net stop mysqlmysql配置[mysqld]# 设置mysql的安装目录basedir = e:/software/mysql# 设置mysql的数据存放目录datadir = e:/software/mysql/data# 允许的最大连接数，设置过小会出现Too many connections错误max_connections = 2000# 设置mysql接收的数据包大小，设置过小会出现mysql has gone away错误max_allowed_packet = 10M# 设置SQL mode为严格sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES# 设置默认字符集character-set-server=utf8mysql安全加固 修改root用户口令，删除空口令默认安装的MySQL的root用户是空密码的，为了安全起见，必须修改为强密码，所谓的强密码，至少8位，由字母、数字和符号组成的不规律密码。使用MySQL自带的命令mysaladmin修改root密码，同时也可以登陆数据库，修改数据库mysql下的user表的字段内容，修改方法如下所示： # 使用mysqladminC:\\Users\\Administrator&amp;gt; mysqladmin -u root password &quot;upassword&quot;# 登录mysqlC:\\Users\\Administrator&amp;gt; use mysql;C:\\Users\\Administrator&amp;gt; update user set password=password(&#39;upassword&#39;) where user=&#39;root&#39;;C:\\Users\\Administrator&amp;gt; flush privileges;// 强制刷新内存授权表，否则用的还是在内存缓冲的口令 删除默认数据库和数据库用户一般情况下，MySQL数据库安装在本地，并且也只需要本地的php脚本对mysql进行读取，所以很多用户不需要，尤其是默认安装的用户。MySQL初始化后会自动生成空用户和test库，进行安装的测试，这会对数据库的安全构成威胁，有必要全部删除，最后的状态只保留单个root即可，当然以后根据需要增加用户和数据库。 C:\\Users\\Administrator&amp;gt; show databases;C:\\Users\\Administrator&amp;gt; drop database test;// 删除数据库testC:\\Users\\Administrator&amp;gt; use mysql;C:\\Users\\Administrator&amp;gt; delete from db;// 删除存放数据库的表信息，因为还没有数据库信息。C:\\Users\\Administrator&amp;gt; delete from user where user=&#39;&#39;;// 删除空用户C:\\Users\\Administrator&amp;gt; delete from user where user=&#39;root&#39; and password=&#39;&#39;;// 删除空密码的root，尽量重复操作Query OK, 2 rows affected (0.00 sec)C:\\Users\\Administrator&amp;gt; flush privileges; //强制刷新内存授权表。 改变默认mysql管理员帐号系统mysql的管理员名称是root，而一般情况下，数据库管理员都没进行修改，这一定程度上对系统用户穷举的恶意行为提供了便利，此时修改为复杂的用户名，请不要在设定为admin或者administraror的形式，因为它们也在易猜的用户字典中。 C:\\Users\\Administrator&amp;gt; update user set user=&quot;newroot&quot; where user=&quot;root&quot;;// 改成不易被猜测的用户名C:\\Users\\Administrator&amp;gt; flush privileges; 给数据库schema分配用户 GRANT SELECT, INSERT, UPDATE, DELETE on schema.* to mysql@localhost identified by &#39;password&#39; " }, { "title": "windows 安装配置 PHP", "url": "/2014/04/windows-install-php/", "categories": "技术", "tags": "PHP", "date": "2014-04-08 16:11:19 +0800", "snippet": "环境： php-5.5.11-Win32-VC11-x64.zip WindowsServer 2008 R2说明： Non Thread Safe和Thread Safe版本的区别Thread Safe是线程安全，执行时会进行线程（Thread）安全检查，以防止有新请求就启动新线程的CGI执行方式而耗尽系统资源。Non Thread Safe是非线程安全，在执行时不进行线程（Thread）安全检查。 VC6、VC9和VC11的区别由不同的编译器编译而成,VC6是由Visual Studio 6编译而成，VC9是由Visual Studio 2008编译而成，VC11是由Visual Studio 2012编译而成，版本越新，性能和稳定性越好，所以推荐用VC11 php.ini-development和php.ini-production的区别这两个都可以更名为php.ini, 只不过php.ini-development里的配置更适合开发用，php.ini-production里的配置更适合发布产品时用，例如当网站正式上线运营时，应该将php.ini-production更名为php.ini安装步骤 解压php-5.5.11-Win32-VC11-x64.zip，得到php.ini-development, 将其更名为php.ini 打开php.ini，修改以下参数 找到date.timezone，设置时区为中国时区date.timezone = PRC 找到; extension_dir = &quot;ext&quot;，改为如下样子，取消前面的;注释符extension_dir = &quot;e:/software/php/ext&quot; 找到 ;extension=php_bz2.dll ;extension=php_curl.dll ;extension=php_fileinfo.dll ;extension=php_gd2.dll ;extension=php_gettext.dll ;extension=php_gmp.dll ;extension=php_intl.dll 按照需要来加载这些扩展库，笔者一般加载这些 ;远程抓取页面 extension=php_curl.dll ;图像处理 extension=php_gd2.dll ;多字节字符串处理 extension=php_mbstring.dll ;操作mysql数据库 extension=php_mysqli.dll ;ssl加密传输 extension=php_openssl.dll ;使用内存缓存，加速网站 extension=php_memcache.dll 加载某个扩展库，只需取消行首的;符，如果没有该扩展库，请查看ext文件夹下是否有该扩展库，如果有，按照格式手动添加即可，如果没有该扩展库，需手动下载扩展库文件到ext文件夹下，最后按照格式手动添加 每次改动php.ini文件里的配置时，都需要重启apache才能生效 保存退出 测试php是否安装配置成功, 可以执行php解压目录下的php.exe常见问题： 提示缺少msvcr110.dll请安装Visual C++ Redistributable 2012" }, { "title": "windows 安装配置 Apache", "url": "/2014/04/windows-install-apache/", "categories": "技术", "tags": "apache", "date": "2014-04-08 16:07:22 +0800", "snippet": "环境 httpd-2.4.9-win64.zip WindowsServer 2008 R2安装配置 解压httpd-2.4.9-win64.zip到e:/software/Apache24，以下以e:/software/Apache24为apache的存放目录做说明，目录可以随意改 打开conf/httpd.conf, 按照如下步骤修改 找到ServerRoot &quot;c:/Apache24&quot;，改为 ServerRoot &quot;e:/software/Apache24&quot; 找到#ServerName www.example.com:80，修改为 ServerName localhost:80 找到LoadModule access_compat_module modules/mod_access_compat.so, 在其上一行添加 PHPIniDir &quot;e:/software/php&quot; 注意: 一定要添加在LoadModule那一段的前面,以便提前加载,不然windows下apache无法读取php.ini里的设置，这里假设php放在e:/software/php目录下，版本为php-5.5.11-Win32-VC11-x64.zip 在LoadModule这段后面添加 LoadModule php5_module &quot;e:/software/php/php5apache2_4.dll&quot; 注意：由于apache版本的不同，这里不一定是php5apache2_4.dll，比如apache版本为2.2，这里就应该是php5apache2_2.dll 找到AddType application/x-gzip .gz .tgz，在其下一行添加 AddType application/x-httpd-php .php 找到 ```apache DocumentRoot “c:/Apache24/htdocs” &amp;lt;Directory “c:/Apache24/htdocs”&amp;gt; 修改为 ```apache DocumentRoot &quot;e:/software/Apache24/htdocs&quot; &amp;lt;Directory &quot;e:/software/Apache24/htdocs&quot;&amp;gt; htdocs是网站存放目录 找到DirectoryIndex index.html，修改为 DirectoryIndex index.php index.html 保存关闭 进入bin文件夹 将apache注册为windows服务httpd -k install -n apache以后就可以用以下命令操作apache net start apache #启动apachenet stop apache #关闭apache 查看apache配置是否正确，可以执行httpd -n apache -t 常见问题： 提示缺少msvcr100.dll，请安装Visual C++ Redistributable 2010" }, { "title": "discuz 添加在发布文章时输入自定义关键字的功能", "url": "/2014/04/discuz-add-custom-keyword-when-publish-article/", "categories": "技术", "tags": "discuz", "date": "2014-04-08 11:15:54 +0800", "snippet": "环境 discuz x3.1操作步骤： 修改template/default/portal/portalcp_article.htm，在大约206行，修改为如下代码 &amp;lt;dt&amp;gt;{lang article_author}&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt;&amp;lt;input type=&quot;text&quot; name=&quot;author&quot; class=&quot;px p_fre&quot; value=&quot;$article[author]&quot; size=&quot;30&quot; /&amp;gt;&amp;lt;/dd&amp;gt; //添加的代码开始 &amp;lt;dt&amp;gt;keywords&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt;&amp;lt;input type=&quot;text&quot; name=&quot;keywords&quot; class=&quot;px p_fre&quot; value=&quot;$article[keywords]&quot; size=&quot;30&quot; /&amp;gt;&amp;lt;/dd&amp;gt; //添加的代码结束 &amp;lt;!--{if $category[$catid][allowcomment]}--&amp;gt; 修改source/include/portalcp/portalcp_article.php，在大约97行，修改为如下代码 &#39;highlight&#39; =&amp;gt; $style, &#39;showinnernav&#39; =&amp;gt; empty($_POST[&#39;showinnernav&#39;]) ? &#39;0&#39; : &#39;1&#39;, &#39;keywords&#39; =&amp;gt; dhtmlspecialchars($_GET[&#39;keywords&#39;])//添加的代码 ); 修改source/module/portal/portal_view.php，在大约278行，修改为如下代码 if(strpos($articleprimaltplname, &#39;:&#39;) !== false) { list($tpldirectory, $articleprimaltplname) = explode(&#39;:&#39;, $articleprimaltplname); } $metakeywords = $article[&#39;keywords&#39;];//添加的代码 include_once template(&quot;diy:portal/view:{$catid}&quot;, NULL, $tpldirectory, NULL, $articleprimaltplname); 修改数据库表pre_portal_article_title，新增字段keywords varchar 255" }, { "title": "discuz 自定义退出时的跳转地址", "url": "/2012/10/discuz-custom-exit-page/", "categories": "技术", "tags": "discuz", "date": "2012-10-15 12:40:07 +0800", "snippet": "需求如果我们想在discuz退出后跳转到其他页面，比如说另外定制的一个页面，该怎么做呢?知识discuz处理退出时的跳转地址的文件是source\\class_member.php具体步骤假如我们有一个logout.html的文件，需要在discuz退出后跳转到它打开source\\class_member.php，找到on_logout()函数修改为如下代码function on_logout() { global $_G; $ucsynlogout = $this-&amp;gt;setting[&#39;allowsynlogin&#39;] ? uc_user_synlogout() : &#39;&#39;; if($_G[&#39;gp_formhash&#39;] != $_G[&#39;formhash&#39;]) { header(&quot;Location: logout.html&quot;);//在这里设置跳转地址 /*showmessage(&#39;logout_succeed&#39;, &#39;../logout.html&#39;, array(&#39;formhash&#39; =&amp;gt; FORMHASH, &#39;ucsynlogout&#39; =&amp;gt; $ucsynlogout));干掉showmessge函数*/ } clearcookies(); $_G[&#39;groupid&#39;] = $_G[&#39;member&#39;][&#39;groupid&#39;] = 7; $_G[&#39;uid&#39;] = $_G[&#39;member&#39;][&#39;uid&#39;] = 0; $_G[&#39;username&#39;] = $_G[&#39;member&#39;][&#39;username&#39;] = $_G[&#39;member&#39;][&#39;password&#39;] = &#39;&#39;; $_G[&#39;setting&#39;][&#39;styleid&#39;] = $this-&amp;gt;setting[&#39;styleid&#39;]; header(&quot;Location: logout.html&quot;);//在这里设置跳转地址 /*showmessage(&#39;logout_succeed&#39;, &#39;../logout.html&#39;, array(&#39;formhash&#39; =&amp;gt; FORMHASH, &#39;ucsynlogout&#39; =&amp;gt; $ucsynlogout));干掉showmessge函数*/}这里showmessage函数的作用是显示对话框，告诉用户已经退出了discuz，我们不需要这个对话框，所以把它注释了，有关showmessage函数的具体使用请自行谷歌" }, { "title": "ipv6 导致无法访问 MySQL 数据库", "url": "/2012/04/ipv6-cause-unable-connect-to-mysql-database/", "categories": "技术", "tags": "ipv6", "date": "2012-04-28 13:24:21 +0800", "snippet": "环境 xp sp3系统 PHP 5.2.6 Apache httpd-2.2.22-win32-x86-no_ssl MySQL 5.5.20.0情景再现前天我在学校的网络中心里安装配置好一个bt程序后，回到寝室里发现数据库不能连接，mysql数据库报错为Could not connect to the specific instance MySQL Error Number 2003，Can&#39;t connect to MySQL server on &#39;localhost&#39; (10061)，If you want to check the network connection, please click the Ping button当时我就纳闷了，好好的数据库怎么突然就无法连接了呢，于是就在网上寻找解决方案，试过很多方法，但是都没能解决我这个问题，我发现好多人都是直接在网上复制答案来给别人回答问题，根本就没有真正考虑这个问题的原因比如把my.ini文件复制到windows/system文件夹里,这就是一种典型的治标不治本的方法，并且还无法解决这个问题，此外如果把那个文件复制到windows/system里，万一下次mysql的my.ini文件更改了，怎么办？再复制一次？其实完全可以在系统变量里指定my.ini的路径，这样的话是否一劳永逸？我觉得我们解决问题的原则是，既要知道原因，又要知道如何更好地解决它。解决方案打开mysql的my.ini文件，在mysqld的部分里添加bind-address=127.0.0.1（在port=3306下面）这段代码分析原因是我在网络中心的时候安装了ipv6协议，mysql默认是以ipv4地址访问的，当我们安装ipv6协议时，mysql就默认以ipv6地址访问，所以我们才无法连接到数据库，这个问题一般出现在xp系统里，xp系统默认是不安装ipv6协议的，win7默认安装，所以win7不会出现这种问题" } ]

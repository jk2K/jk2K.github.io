<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://jk2k.com/</id><title>jk2K 的博客</title><subtitle>分享对技术、商业、常识的认识和见解</subtitle> <updated>2023-02-10T18:07:22+08:00</updated> <author> <name>jk2K</name> <uri>https://jk2k.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://jk2k.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://jk2k.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2023 jk2K </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>深入研究 GitHub Action：解决了什么问题，优势，产品分析？</title><link href="https://jk2k.com/2023/01/dive-into-github-action/" rel="alternate" type="text/html" title="深入研究 GitHub Action：解决了什么问题，优势，产品分析？" /><published>2023-01-29T19:50:00+08:00</published> <updated>2023-01-29T19:50:00+08:00</updated> <id>https://jk2k.com/2023/01/dive-into-github-action/</id> <content src="https://jk2k.com/2023/01/dive-into-github-action/" /> <author> <name>jk2K</name> </author> <category term="技术" /> <summary> GitHub Actions 是 GitHub 推出的持续集成和持续交付平台（CI/CD 平台），允许开发者实现自动化的编译、测试、部署，于 2019 年 11 月全面可用，今天就来深入拆解下 GitHub Actions 解决了什么问题？ CI/CD 平台（流水线引擎）发展历史中大概有 3 波浪潮 第一波浪潮以 Jenkins 为代表，让大家广泛的接受了持续集成和持续交付的概念，解决了自动编译、测试、部署代码的问题 第二波浪潮以 GitLab CI 为代表，以代码仓库为入口，设计理念是流水线即代码，开箱即用，使用体验极好，好比大家从 Eclipse 切换到 IntelliJ IDEA，解决了流水线的管理问题 第三波浪潮以 GitHub Actions 为代表，设计理念是将可复用的能完成复杂但是高频任务的脚本封装为原子（Actions），原子和编程语言的函数... </summary> </entry> <entry><title>如何建设一个用于编译 iOS App 的 macOS 云服务器集群？</title><link href="https://jk2k.com/2023/01/how-to-create-a-macos-server-cluster-for-compiling-ios-apps/" rel="alternate" type="text/html" title="如何建设一个用于编译 iOS App 的 macOS 云服务器集群？" /><published>2023-01-14T19:50:00+08:00</published> <updated>2023-01-14T19:50:00+08:00</updated> <id>https://jk2k.com/2023/01/how-to-create-a-macos-server-cluster-for-compiling-ios-apps/</id> <content src="https://jk2k.com/2023/01/how-to-create-a-macos-server-cluster-for-compiling-ios-apps/" /> <author> <name>jk2K</name> </author> <category term="技术" /> <summary> 现代软件开发一般会借助 CI/CD 来提升代码质量、加快发版速度、自动化重复的事情，iOS App 只能在 mac 机器上编译，CI/CD 工具因此需要有一个 macOS 云服务器集群来执行 iOS App 的编译。 今天就来谈谈如何建设 macOS 云服务器集群 购买 mac mini / Mac Studio 机器 最简单的方式就是购买一批 mac 机器，买它个 1000 台，买回来后放入机房，把其中一台机器作为管理机，申请办公网访问这台机器的网络权限，每次要维护这批机器里的软件时，先从办公网进入管理机，然后从管理机在远程连接到其他机器。 虚拟化 macOS 集群 借助 macOS 官方的 Hypervisor.framework，可以分钟级创建 macOS 虚拟机，这种方式创建的虚拟机性能、稳定性、安全性都很高，可以持续采用更新、更快、更高级的 mac 硬件，最终实现更... </summary> </entry> <entry><title>使用第一性原理思维思考如何打造提高生产力的平台</title><link href="https://jk2k.com/2022/09/use-first-principle-thinking-to-think-about-how-to-improve-business-productivity/" rel="alternate" type="text/html" title="使用第一性原理思维思考如何打造提高生产力的平台" /><published>2022-09-03T11:00:00+08:00</published> <updated>2022-09-08T11:33:36+08:00</updated> <id>https://jk2k.com/2022/09/use-first-principle-thinking-to-think-about-how-to-improve-business-productivity/</id> <content src="https://jk2k.com/2022/09/use-first-principle-thinking-to-think-about-how-to-improve-business-productivity/" /> <author> <name>jk2K</name> </author> <category term="技术" /> <summary> 引言 现在全社会都在搞数字化转型，从政府到企业，那么为什么要进行数字化转型呢？本质上还是社会治理和企业经营难度变得更大了。 以企业来说，转型的目标是为了实现有质量的活着，比如能赚更多的钱或者持续保持稳健运营，转型的核心是期望借助数字化技术构建一个管理体系，以应对外部环境动荡、企业竞争变化和技术更新发展带来的不确定性。 数字化转型会带来大量的研发需求，如何更好更快的交付这些需求成为一个突出问题，该怎么打造一个平台去解决该问题？能不能用第一性原理思维去推导出发展方向？ 什么是第一性原理 第一性原理指的是，将问题拆分成最基本的事实或规律，根据这些已知信息，不断推演和计算，从而找到解决问题最优路径的方法。 该思维比较出名的应用例子有 埃隆·马斯克降低火箭发射成本的故事。将火箭发射成本进行细分，发展火箭可重复使用发射技术，简化设计和改进工艺以降低火箭制造成本 亨利·福特降低... </summary> </entry> <entry><title>IPV6 环境下用 iPhone 访问 windows 10 远程桌面</title><link href="https://jk2k.com/2018/12/access-windows-10-with-iphone-in-ipv6-network/" rel="alternate" type="text/html" title="IPV6 环境下用 iPhone 访问 windows 10 远程桌面" /><published>2018-12-01T14:43:19+08:00</published> <updated>2018-12-01T14:43:19+08:00</updated> <id>https://jk2k.com/2018/12/access-windows-10-with-iphone-in-ipv6-network/</id> <content src="https://jk2k.com/2018/12/access-windows-10-with-iphone-in-ipv6-network/" /> <author> <name>jk2K</name> </author> <category term="技术" /> <summary> 前言 最近意外发现家里用的移动宽带已经获取到了 IPV6 地址，然后又意外发现移动 4G 也是可以访问 IPV6 的 Windows 网络情况 iOS 网络情况 2010 年开始在校园网用 IPV6, 到现在已经过去 9 年了，现在终于开始普及了 需求 我们有时候需要访问家中的电脑，如果没有公网 IP 的话，实现起来就比较麻烦 在 IPV4 环境下，IP 数量比较少，很多运营商不会给设备分配独立的 IP，而是共用一个出口 IP，这种情况下一般需要通过额外的软件(例如 frp)去搭建隧道来实现 IPV6 则没有这个烦恼，它可以给地球上的每粒沙子都分配一个 IP 地址，既然现在我电脑已经有了独立的 公网 IPV6 地址，那现在是时候采用更简单的方式去访问指定电脑了 操作步骤 允许远程连接到此计算机 点击 远程桌面 的显示设置 选择允许远程连接到此计算机 ... </summary> </entry> <entry><title>如何安装托管在私有 GitLab 实例上的 composer 包?</title><link href="https://jk2k.com/2018/01/how-to-install-composer-package-hosted-on-your-own-gitlab-installation-instance/" rel="alternate" type="text/html" title="如何安装托管在私有 GitLab 实例上的 composer 包?" /><published>2018-01-27T12:54:19+08:00</published> <updated>2018-01-27T12:54:19+08:00</updated> <id>https://jk2k.com/2018/01/how-to-install-composer-package-hosted-on-your-own-gitlab-installation-instance/</id> <content src="https://jk2k.com/2018/01/how-to-install-composer-package-hosted-on-your-own-gitlab-installation-instance/" /> <author> <name>jk2K</name> </author> <category term="技术" /> <summary> composer 包安装方式有哪几种? 一般来说开源的 PHP 包都会放在 packagist.org, Composer 直接安装就行 私有包有以下几种安装方式 在 packagist.com 购买付费服务, 不用自己维护, 省心 搭建 Satis 实例, 相当于搭建了私有的 packagist.org, 需要自己维护服务器 购买了 GitHub 企业版, 将包托管在企业版上 搭建 GitLab 社区版 实例, 将包托管在这上面 可以根据各自情况选择合适的方案, 笔者在这篇文章中只讲解如何安装托管在私有 GitLab 实例上的包 环境信息 假设私有 GitLab 实例网址为 http://git.demo.com 要安装的包名为 demo/fly 配置 composer 以使用 GitLab API 因为网络原因, 项目里一般会把 vendo... </summary> </entry> </feed>
